<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.project.device.mapper.LogDeviceOperateMapper">
	<insert id="insert" parameterType="LogDeviceOperate" useGeneratedKeys="true" keyProperty="id">
		insert into iot_log_device_operate(
		<if test="deviceId != null ">device_id,</if>
		<if test="uuid != null and uuid != '' ">uuid,</if>
		<if test="operator != null and operator != '' ">operator,</if>
		<if test="operatorNo != null and operatorNo != '' ">operator_no,</if>
		<if test="operateType != null and operateType != ''">operate_type,</if>
		<if test="operateStartTime != null ">operate_start_time,</if>
		<if test="operateEndTime != null ">operate_end_time,</if>
		create_time
		)values(
		<if test="deviceId != null ">#{deviceId},</if>
		<if test="uuid != null and uuid != '' ">#{uuid},</if>
		<if test="operator != null and operator != '' ">#{operator},</if>
		<if test="operatorNo != null and operatorNo != '' ">#{operatorNo},</if>
		<if test="operateType != null and operateType != ''">#{operateType},</if>
		<if test="operateStartTime != null ">#{operateStartTime},</if>
		<if test="operateEndTime != null ">#{operateEndTime},</if>
		sysdate()
		)
	</insert>

	<update id="updateById" parameterType="LogDeviceOperate">
		update iot_log_device_operate
		<set>
			<if test="deviceId != null ">device_id = #{deviceId},</if>
			<if test="uuid != null and uuid != '' ">uuid = #{uuid},</if>
			<if test="operator != null and operator != '' ">operator = #{operator},</if>
			<if test="operatorNo != null and operatorNo != '' ">operator_no = #{operatorNo},</if>
			<if test="operateType != null and operateType != '' ">operate_type = #{operateType},</if>
			<if test="operateStartTime != null ">operate_start_time = #{operateStartTime},</if>
			<if test="operateEndTime != null  ">operate_end_time = #{operateEndTime},</if>
			update_time = sysdate()
		</set>
		where id = #{id}
	</update>

	<resultMap type="LogDeviceOperateVo" id="LogDeviceOperateVoResult">
		<id     property="id"                  column="id"         />
		<result property="deviceId"            column="device_id"         />
		<result property="uuid"                column="uuid"         />
		<result property="operator"            column="operator"         />
		<result property="operatorNo"          column="operator_no"         />
		<result property="operateType"         column="operate_type"      />
		<result property="operateStartTime"    column="operate_start_time"       />
		<result property="operateEndTime"      column="operate_end_time"       />
		<result property="createTime"          column="create_time"       />
		<result property="updateTime"          column="update_time"       />
	</resultMap>

	<sql id="LogDeviceOperateSelectSql">
		select  o.id, o.device_id, o.uuid, o.operator, o.operator_no, o.operate_start_time, o.operate_end_time, o.create_time, o.update_time from iot_log_device_operate o
	</sql>

	<select id="selectPageList" parameterType="LogDeviceOperate" resultMap="LogDeviceOperateVoResult">
		<include refid="LogDeviceOperateSelectSql"/>
		where operate_type='turnOnOrOff' and operate_start_time is not null
		<if test="operator != null and operator != '' ">
			AND o.operator LIKE CONCAT('%', #{operator}, '%')
		</if>
		<if test="params.beginTime != null and params.beginTime != ''"><!-- 开始时间检索 -->
			and date_format(o.operate_start_time,'%Y%m%d') &gt;= date_format(#{params.beginTime},'%Y%m%d')
		</if>
		<if test="params.endTime != null and params.endTime != ''"><!-- 结束时间检索 -->
			and date_format(o.operate_start_time,'%Y%m%d') &lt;= date_format(#{params.endTime},'%Y%m%d')
		</if>
		<!-- 数据范围过滤 -->
		${params.dataScopeDevice}
	</select>

	<select id="selectById" parameterType="Long" resultMap="LogDeviceOperateVoResult">
		<include refid="LogDeviceOperateSelectSql"/>
		where d.id = #{id}
	</select>

	<select id="selectLastOperateByDeviceId" parameterType="Long" resultMap="LogDeviceOperateVoResult">
		select id, device_id, uuid,operator, operator_no, operate_start_time, operate_end_time, create_time, update_time from iot_log_device_operate where device_id=#{deviceId} and operate_type='turnOnOrOff' order by operate_start_time desc limit 1
	</select>
</mapper> 